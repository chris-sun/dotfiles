function greset {
  if [ $# -lt 1 ]
  then
    echo "greset requires at least one argument"
  else
    for f in $@
    do
      echo "git checkout -- $f"
      echo "git checkout HEAD $f"
      git checkout -- $f
      git checkout HEAD $f
    done
  fi
}

# Add only the modified files to be staged
function gaddmod {
  git status | grep modified | awk '{print $2}' | xargs git add
}

# Git pull the current branch
function gpl {
  BRANCH=`git rev-parse --abbrev-ref HEAD | awk '{print $1}'`
  echo "Running git pull origin ${BRANCH}, then git fetch"
  git pull origin ${BRANCH}
  git fetch
}

# Git push the current branch
function gps {
  BRANCH=`git rev-parse --abbrev-ref HEAD | awk '{print $1}'`
  echo "Running git push origin ${BRANCH}"
  git push origin ${BRANCH}
}

# Git push the current branch to Bitbucket
function gpb {
  BRANCH=`git rev-parse --abbrev-ref HEAD | awk '{print $1}'`
  echo "Running git push bitbucket ${BRANCH}"
  git push bitbucket ${BRANCH}
}

# Git "force" push the current branch
function gfp {
  BRANCH=`git rev-parse --abbrev-ref HEAD | awk '{print $1}'`
  if [[ "$BRANCH" == 'development' || "$BRANCH" == 'master' ]] ; then
    echo "..."
    echo "YOU SHOULD NOT force push 'development' or 'master' "
    echo "Please try again ..."
    echo "..."
    return 1
  fi
  echo "Running git push -f origin ${BRANCH}"
  git push -f origin ${BRANCH}
}
