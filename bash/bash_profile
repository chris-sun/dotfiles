function parse_git_branch {
  git rev-parse --abbrev-ref HEAD 2> /dev/null
}

# function parse_git_dirty {
#   [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && echo "*"
# }
# function parse_git_stash {
#   [[ $(git stash list 2> /dev/null | tail -n1) != "" ]] && echo "^"
# }
# function parse_git_branch {
#   git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)$(parse_git_stash)/"
# }

export PATH="/Applications/Postgres.app/Contents/Versions/9.4/bin:/usr/local/bin:/usr/local/sbin:$HOME/bin:$PATH"

# Some RVM stuff
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Prompt
export PS1="[\[\033[36m\]\@ \W\[\033[m\] \[\033[1;37m\]\$(parse_git_branch)\[\033[0m\]]$ "
# Try this later on
# export PS1='\[\e[0;33m\]${HOSTNAME}\[\e[m\] \W \[\e[0;36m\]$(parse_git_branch)\[\e[m\] $ '
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
alias ls='ls -G'

# Edit the command line using vi
set -o vi

# Read the other stuff
if [ -f ~/dotfiles/bash/alias ] ; then
  source ~/dotfiles/bash/alias
fi

# Some git related functions
if [ -f ~/dotfiles/bash/git_functions ] ; then
  source ~/dotfiles/bash/git_functions
fi

if [ -f ~/bin/git_completion.bash ]; then
  . ~/bin/git_completion.bash
fi


if [[ $TERM != "screen" ]] ; then
  hash tmux &> /dev/null
  if [ $? -eq 0 ]; then
    exec tmux
  fi
fi

# Pythong stuff
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# Set JAVA_HOME for a Mac on OS 10.7
# export JAVA_HOME=$(/usr/libexec/java_home)

# source $HOME/work/pv-data-ingestion/common/sh/buildenv
